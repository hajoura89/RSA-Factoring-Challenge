#!/usr/bin/env bash
<<'###'
RSA Laboratories states that: for each RSA number n, there exist prime numbers p and q such that
n = p Ã— q. The problem is to find these two primes, given only n.
This task is the same as task 0, except:
p and q are always prime numbers
There is only one number in the files
How far can you go in less than 5 seconds?
###
rsa_factor()
{
        if [ $# -ne 3 ];
        then
                inputs=("$@")
                count=0
                nbr2=1
                for a in ${inputs[*]};
                do
                        if [ $count -gt 1 ];
                        then
                                nbr2=$(echo $a*$nbr2 | bc)
                        fi
                        count=$((count + 1))
                done
        else
                nbr2=$3
        fi

        nbr1=$2
        nbr=$(echo "$1" | tr ':' '=')

        output=$(echo "if($nbr2 > $nbr1) 1 else 0" | bc)
                if ((output == 1)); then
                        tmp=$nbr1
                        nbr1=$nbr2
                        nbr2=$tmp
                fi

        echo "$nbr$nbr1*$nbr2"
}

if [ $# -ne 1 ]
then
        echo 'Usage: rsa <file>'
        exit 1
else
	while read -r i;
	do
        # Run rsa_factor() with a 5-second timeout
        output=$(timeout 5s factor "$i")
        echo "$output" | rsa_factor $output
	done < "$1"

fi
